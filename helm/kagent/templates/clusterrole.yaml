# Kagent RBAC - Optimized for Multi-Namespace Support (Post PR #405)
# These ClusterRoles provide minimal permissions required for kagent's
# multi-namespace functionality while maintaining security best practices.
# 
# Key features:
# - Cross-namespace resource references (namespace/name format)
# - Specific resource targeting (no wildcard permissions)
# - Separation of read/write permissions
# - Tools container troubleshooting capabilities

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "kagent.fullname" . }}-getter-role
  labels:
    {{- include "kagent.labels" . | nindent 4 }}
rules:
# Kagent's own custom resources - READ access for controller and handlers
- apiGroups:
  - kagent.dev
  resources:
  - agents
  - modelconfigs
  - teams
  - toolservers
  - memories
  verbs:
  - get
  - list
  - watch

# Status access for kagent resources - READ-ONLY for getter role
- apiGroups:
  - kagent.dev
  resources:
  - agents/status
  - modelconfigs/status
  - teams/status
  - toolservers/status
  - memories/status
  verbs:
  - get

# Core resources - SPECIFIC resources for cross-namespace access (ModelConfig API keys)
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch

# Tools container troubleshooting - READ-ONLY cluster access
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - events
  - namespaces
  - nodes
  verbs:
  - get
  - list
  - watch

# Pod logs for troubleshooting
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get

# Apps resources - READ-ONLY for tools container
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  - daemonsets
  - statefulsets
  verbs:
  - get
  - list
  - watch

# Batch resources - READ-ONLY for tools container
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - get
  - list
  - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "kagent.fullname" . }}-writer-role
  labels:
    {{- include "kagent.labels" . | nindent 4 }}
rules:
# Kagent custom resources - FULL access across all namespaces (required for multi-namespace support)
- apiGroups:
  - kagent.dev
  resources:
  - agents
  - modelconfigs
  - teams
  - toolservers
  - memories
  verbs:
  - create
  - update
  - patch
  - delete

# Status updates for kagent resources
- apiGroups:
  - kagent.dev
  resources:
  - agents/status
  - modelconfigs/status
  - teams/status
  - toolservers/status
  - memories/status
  verbs:
  - get
  - patch
  - update

# Finalizers for kagent resources
- apiGroups:
  - kagent.dev
  resources:
  - agents/finalizers
  - modelconfigs/finalizers
  - teams/finalizers
  - toolservers/finalizers
  - memories/finalizers
  verbs:
  - update

# Secrets - ONLY for ModelConfig API key management (cross-namespace access required)
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch
  - delete
  - get
  - list
  - watch

# ConfigMaps - ONLY for configuration management
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - update
  - patch
  - delete
  - get
  - list
  - watch

# Events - For status reporting
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch

